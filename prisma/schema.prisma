generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  firebaseId String   @unique
  profile    Profile? @relation("UserHasProfile")
}

model Profile {
  id                Int       @id @default(autoincrement())
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user              User      @relation("UserHasProfile", fields: [userId], references: [id])
  userId            Int       @unique
  username          String
  picture           String?
  friends           Friend[]  @relation("SourceFriendsUser")
  friendsOf         Friend[]  @relation("TargetFriendsUser")
  posts             Post[]    @relation("UserAuthorsPosts")
}

model Friend {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  source    Profile  @relation("SourceFriendsUser", fields: [sourceId], references: [id])
  sourceId  Int
  target    Profile  @relation("TargetFriendsUser", fields: [targetId], references: [id])
  targetId  Int
  approved  Boolean  @default(false)
  besties   Boolean  @default(false)
}

model Post {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  content    String    @db.VarChar(50)
  emoji      String    @db.VarChar(1)
  author     Profile   @relation("UserAuthorsPosts", fields: [authorId], references: [id])
  authorId   Int
}
